- name: Configure backend server
  hosts: backend
  become: yes
  tasks:
  - name: disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable current nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql
  
  - name: Create expense user
    ansible.builtin.user:
      name: expense
    
  - name: Create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the backend code
    ansible.builtin.get_url: 
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  
  - name: Unzip backend code 
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: Install dependencies
    community.general.npm:
      path: /app

  - name: Copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  
  - name: Install Mysql libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptograpy
    - PyMySQl 


  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.charankandukuri.site
      target: /app/schema/backend.sql


  - name: Daemon reload and restart service
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      enabled: yes
      daemon_reload: true